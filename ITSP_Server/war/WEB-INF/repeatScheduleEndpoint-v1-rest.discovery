{
 "kind": "discovery#restDescription",
 "etag": "\"doS0mIKix6_L3_LoT-sZZjofha4/-eqnHUh4ktcLiFmJh2p3xhe0mb8\"",
 "discoveryVersion": "v1",
 "id": "repeatScheduleEndpoint:v1",
 "name": "repeatScheduleEndpoint",
 "version": "v1",
 "description": "This is an API",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rest",
 "baseUrl": "https://fragile-t.appspot.com/_ah/api/repeatScheduleEndpoint/v1/",
 "basePath": "/_ah/api/repeatScheduleEndpoint/v1/",
 "rootUrl": "https://fragile-t.appspot.com/_ah/api/",
 "servicePath": "repeatScheduleEndpoint/v1/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "schemas": {
  "RepeatScheduleContainer": {
   "id": "RepeatScheduleContainer",
   "type": "object",
   "properties": {
    "dates": {
     "type": "array",
     "items": {
      "type": "string",
      "format": "date-time"
     }
    },
    "integers": {
     "type": "array",
     "items": {
      "type": "integer",
      "format": "int32"
     }
    }
   }
  },
  "RepeatScheduleListContainer": {
   "id": "RepeatScheduleListContainer",
   "type": "object",
   "properties": {
    "list": {
     "type": "array",
     "items": {
      "$ref": "RepeatScheduleV1Dto"
     }
    }
   }
  },
  "RepeatScheduleResultV1Dto": {
   "id": "RepeatScheduleResultV1Dto",
   "type": "object",
   "properties": {
    "result": {
     "type": "string"
    }
   }
  },
  "RepeatScheduleV1Dto": {
   "id": "RepeatScheduleV1Dto",
   "type": "object",
   "properties": {
    "excepts": {
     "type": "array",
     "items": {
      "type": "string",
      "format": "date-time"
     }
    },
    "finishTime": {
     "type": "string",
     "format": "int64"
    },
    "repeatBegin": {
     "type": "string",
     "format": "int64"
    },
    "repeatDays": {
     "type": "array",
     "items": {
      "type": "integer",
      "format": "int32"
     }
    },
    "repeatEnd": {
     "type": "string",
     "format": "int64"
    },
    "startTime": {
     "type": "string",
     "format": "int64"
    }
   }
  },
  "RepeatScheduleV1DtoCollection": {
   "id": "RepeatScheduleV1DtoCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "RepeatScheduleV1Dto"
     }
    }
   }
  }
 },
 "resources": {
  "repeatScheduleV1EndPoint": {
   "methods": {
    "createRepeatSchedule": {
     "id": "repeatScheduleEndpoint.repeatScheduleV1EndPoint.createRepeatSchedule",
     "path": "createRepeatSchedule/{startTime}/{finishTime}/{email}",
     "httpMethod": "POST",
     "parameters": {
      "email": {
       "type": "string",
       "required": true,
       "location": "path"
      },
      "finishTime": {
       "type": "string",
       "required": true,
       "format": "int64",
       "location": "path"
      },
      "startTime": {
       "type": "string",
       "required": true,
       "format": "int64",
       "location": "path"
      }
     },
     "parameterOrder": [
      "startTime",
      "finishTime",
      "email"
     ],
     "request": {
      "$ref": "RepeatScheduleContainer",
      "parameterName": "resource"
     },
     "response": {
      "$ref": "RepeatScheduleResultV1Dto"
     }
    },
    "createRepeatScheduleList": {
     "id": "repeatScheduleEndpoint.repeatScheduleV1EndPoint.createRepeatScheduleList",
     "path": "createRepeatScheduleList/{email}",
     "httpMethod": "POST",
     "parameters": {
      "email": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "email"
     ],
     "request": {
      "$ref": "RepeatScheduleListContainer",
      "parameterName": "resource"
     },
     "response": {
      "$ref": "RepeatScheduleResultV1Dto"
     }
    },
    "createRepeatScheduleWithTerm": {
     "id": "repeatScheduleEndpoint.repeatScheduleV1EndPoint.createRepeatScheduleWithTerm",
     "path": "createRepeatScheduleWithTerm/{startTime}/{finishTime}/{repeatBegin}/{repeatEnd}/{email}",
     "httpMethod": "POST",
     "parameters": {
      "email": {
       "type": "string",
       "required": true,
       "location": "path"
      },
      "finishTime": {
       "type": "string",
       "required": true,
       "format": "int64",
       "location": "path"
      },
      "repeatBegin": {
       "type": "string",
       "required": true,
       "format": "int64",
       "location": "path"
      },
      "repeatEnd": {
       "type": "string",
       "required": true,
       "format": "int64",
       "location": "path"
      },
      "startTime": {
       "type": "string",
       "required": true,
       "format": "int64",
       "location": "path"
      }
     },
     "parameterOrder": [
      "startTime",
      "finishTime",
      "repeatBegin",
      "repeatEnd",
      "email"
     ],
     "request": {
      "$ref": "RepeatScheduleContainer",
      "parameterName": "resource"
     },
     "response": {
      "$ref": "RepeatScheduleResultV1Dto"
     }
    },
    "deleteAllRepeatSchedule": {
     "id": "repeatScheduleEndpoint.repeatScheduleV1EndPoint.deleteAllRepeatSchedule",
     "path": "allrepeatschedule/{email}",
     "httpMethod": "DELETE",
     "parameters": {
      "email": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "email"
     ],
     "response": {
      "$ref": "RepeatScheduleResultV1Dto"
     }
    },
    "deleteRepeatSchedule": {
     "id": "repeatScheduleEndpoint.repeatScheduleV1EndPoint.deleteRepeatSchedule",
     "path": "repeatschedule/{keyS}",
     "httpMethod": "DELETE",
     "parameters": {
      "keyS": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "keyS"
     ],
     "response": {
      "$ref": "RepeatScheduleResultV1Dto"
     }
    },
    "getRepeatSchedule": {
     "id": "repeatScheduleEndpoint.repeatScheduleV1EndPoint.getRepeatSchedule",
     "path": "repeatschedulev1dtocollection/{startTime}/{finishTime}/{email}",
     "httpMethod": "GET",
     "parameters": {
      "email": {
       "type": "string",
       "required": true,
       "location": "path"
      },
      "finishTime": {
       "type": "string",
       "required": true,
       "format": "int64",
       "location": "path"
      },
      "startTime": {
       "type": "string",
       "required": true,
       "format": "int64",
       "location": "path"
      }
     },
     "parameterOrder": [
      "startTime",
      "finishTime",
      "email"
     ],
     "response": {
      "$ref": "RepeatScheduleV1DtoCollection"
     }
    }
   }
  }
 }
}
